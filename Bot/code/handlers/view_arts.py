import asyncio

from aiogram import F, Router
from aiogram.types import CallbackQuery, Message, FSInputFile
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from Bot.code.keyboards.inline_kbs import send_view_art_kb, send_view_continue_kb

from aiogram.utils.chat_action import ChatActionSender
from aiogram.utils.media_group import MediaGroupBuilder

import requests
import os

view_arts_router = Router()

api_site = 'http://127.0.0.1:5000/bot_api/arts'


class ViewForm(StatesGroup):
    ViewArtWithId = State()


@view_arts_router.callback_query(F.data == 'view_menu')
async def view_menu(call: CallbackQuery):
    await call.message.edit_text('–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–±–æ—Ç—É, —É–∫–∞–∑–∞–≤ –µ—ë id, –∏–ª–∏ –∂–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ª—É—á–∞–π–Ω—É—é —Ä–∞–±–æ—Ç—É',
                                 reply_markup=send_view_art_kb())
    await call.answer()


@view_arts_router.callback_query(F.data == 'view_random_art')
async def view_random_art(message: CallbackQuery):
    await message.message.answer('–ü–æ–¥–±–∏—Ä–∞–µ–º —Ä–∞–±–æ—Ç—É, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...')
    await asyncio.sleep(1)
    try:
        req = requests.get(f'{api_site}/get_random_art').json()
        async with ChatActionSender.upload_photo(bot=message.message.bot, chat_id=message.message.chat.id):
            # –°–æ–∑–¥–∞–µ–º –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—É –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–æ–∫
            media = MediaGroupBuilder()
            media.add_photo(FSInputFile(f'WebSite/static/img/{req["art"]["id"]}{req["art"]["extension"]}'),
                            caption=f'''–°–ª—É—á–∞–π–Ω–∞—è —Ä–∞–±–æ—Ç–∞
üí°–ù–∞–∑–≤–∞–Ω–∏–µ: {req["art"]["name"]}
üîà–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã(–∫—Ä–∞—Ç–∫–æ): {req["art"]["short_description"] if req["art"]["short_description"] else '–æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}
üë®‚Äçüíª–°–æ–∑–¥–∞—Ç–µ–ª—å: {req["art"]["creator"] if req["art"]["creator"] else '–Ω–µ —É–∫–∞–∑–∞–Ω'}
üèÜ–û–±–ª–∞–¥–∞—Ç–µ–ª—å: {req["art"]["owner"] if req["art"]["owner"] else '–Ω–µ —É–∫–∞–∑–∞–Ω'}
üíµ–¶–µ–Ω–∞: {f'{req["art"]["price"]} ETH‚ô¢' if req["art"]["price"] else '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}
üëÅÔ∏è–ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {req["art"]["views"] if req["art"]["views"] else '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}
‚è±Ô∏è–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {req["art"]["creation_time"] if req["art"]["creation_time"] else '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}
''')
        await asyncio.sleep(1)
        await message.message.answer_media_group(media=media.build())
        await message.message.answer('–ï—Å–ª–∏ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ä–∞–±–æ—Ç–∞, –≤—ã –º–æ–∂–µ—Ç–µ –µ—ë –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏',
                                     reply_markup=send_view_continue_kb())
    except Exception:
        await message.message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑',
                                     reply_markup=send_view_continue_kb(error=True))


@view_arts_router.callback_query(F.data == 'view_art_with_id')
async def get_art_id(call: CallbackQuery, state: FSMContext):
    await state.set_state(ViewForm.ViewArtWithId)
    await call.message.answer('–í–≤–µ–¥–∏—Ç–µ id –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π –≤–∞—Å —Ä–∞–±–æ—Ç—ã')


@view_arts_router.message(ViewForm.ViewArtWithId)
async def view_art_with_id(message: Message, state: FSMContext):
    await message.answer('–ò—â–µ–º –Ω—É–∂–Ω—É—é —Ä–∞–±–æ—Ç—É, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...')
    await asyncio.sleep(1)
    await state.set_state(None)
    try:
        req = requests.get(f'{api_site}/{message.text}').json()
        async with ChatActionSender.upload_photo(bot=message.bot, chat_id=message.chat.id):
            # –°–æ–∑–¥–∞–µ–º –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—É –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–æ–∫
            media = MediaGroupBuilder()
            media.add_photo(FSInputFile(f'WebSite/static/img/{req["art"]["id"]}{req["art"]["extension"]}'),
                            caption=f'''–°–ª—É—á–∞–π–Ω–∞—è —Ä–∞–±–æ—Ç–∞
üí°–ù–∞–∑–≤–∞–Ω–∏–µ: {req["art"]["name"]}
üîà–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã(–∫—Ä–∞—Ç–∫–æ): {req["art"]["short_description"] if req["art"]["short_description"] else '–æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}
üë®‚Äçüíª–°–æ–∑–¥–∞—Ç–µ–ª—å: {req["art"]["creator"] if req["art"]["creator"] else '–Ω–µ —É–∫–∞–∑–∞–Ω'}
üèÜ–û–±–ª–∞–¥–∞—Ç–µ–ª—å: {req["art"]["owner"] if req["art"]["owner"] else '–Ω–µ —É–∫–∞–∑–∞–Ω'}
üíµ–¶–µ–Ω–∞: {f'{req["art"]["price"]} ETH‚ô¢' if req["art"]["price"] else '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}
üë£–ü—Ä–æ—Å–º–æ—Ç—Ä—ã: {req["art"]["views"] if req["art"]["views"] else '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}
‚è±Ô∏è–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {req["art"]["creation_time"] if req["art"]["creation_time"] else '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}
''')
        await asyncio.sleep(1)
        await message.answer_media_group(media=media.build())
        await message.answer('–ï—Å–ª–∏ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ä–∞–±–æ—Ç–∞, –≤—ã –º–æ–∂–µ—Ç–µ –µ—ë –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏',
                                  reply_markup=send_view_continue_kb())
    except KeyError:
        await message.answer('–†–∞–±–æ—Ç—ã —Å —Ç–∞–∫–∏–º id –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞',
                                  reply_markup=send_view_continue_kb(error=True))
    except Exception:
        await message.answer('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑',
                                  reply_markup=send_view_continue_kb(error=True))


@view_arts_router.callback_query(F.data == 'skip')
async def view_continue(call: CallbackQuery):
    await call.message.answer('–ñ–µ–ª–∞–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?', reply_markup=send_view_art_kb())


@view_arts_router.callback_query(F.data == 'purchase_artwork')
async def purchase(call: CallbackQuery):
    await call.message.answer('–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω–∞')
